I"$<h1 class="no_toc" id="geocoding-and-making-web-maps-with-python">Geocoding and Making Web Maps with Python</h1>

<details open="">
  <summary class="text-delta">
    Table of contents
  </summary>
<ol id="markdown-toc">
  <li><a href="#why-python" id="markdown-toc-why-python">Why Python?</a>    <ol>
      <li><a href="#packages" id="markdown-toc-packages">Packages</a></li>
    </ol>
  </li>
  <li><a href="#geocoding" id="markdown-toc-geocoding">Geocoding</a>    <ol>
      <li><a href="#using-mapbox" id="markdown-toc-using-mapbox">Using Mapbox</a></li>
    </ol>
  </li>
  <li><a href="#web-mapping" id="markdown-toc-web-mapping">Web Mapping</a></li>
</ol>

</details>

<h1 id="why-python">Why Python?</h1>

<p>Its a great language! But its not the only language. Just as English, Cantonese, or Punjabi could all be used to explain systemic racism; Python, Javascirpt, or R can all be used to quantify and visualize the scale of the problem.  I like python because its very flexible, fairly easy to read / write, well suited for data analysis, has lots of packages for GIS, and it’s completely free!</p>

<h2 id="packages">Packages</h2>

<p>Python has a number of built in functions, but many of the most useful tools and functions come require us to <a href="https://docs.python.org/3/reference/simple_stmts.html#import">import</a> packages.</p>

<ul>
  <li>Packages are pre-written blocks of code, sometimes referred to as libraries.</li>
  <li>They are built for addressing specific tasks: e.g. linear algebra, mapping, plotting.</li>
</ul>

<h1 id="geocoding">Geocoding</h1>

<p>The process of attributing coordinates (Latitude/Longitude) to descriptive locations (Street Address).  With Python, we can use a variety of web based services (google maps, mapbox, open street map, etc.) to perform geocoding.  We’re using mapbox today because it strikes a good balance between cost and accuracy.  <a href="https://developers.google.com/maps/documentation/geocoding/overview">Google maps</a> is arguably the best geocoding service, but it costs money :/ (5.00 USD per 1000 request).  <a href="https://osmnames.org/">Open Street Maps</a> is totally free, but it is error prone. <a href="https://docs.mapbox.com/api/search/geocoding/">Mapbox</a> is free, up to <a href="https://www.mapbox.com/pricing/#geocode">100,000 requests per month</a> and gives fairly reliable results.  We will be using a module called <a href="https://geopy.readthedocs.io/en/stable/">geopy</a> to interface with Mapbox for us.</p>

<h2 id="using-mapbox">Using Mapbox</h2>

<p>Create a free <a href="https://mapbox.com">Mapbox</a> account.  Once you have an account, you will be given an <a href="https://account.mapbox.com/access-tokens/">access token</a>.  Which lets you use the mapbox service.</p>

<h1 id="web-mapping">Web Mapping</h1>

<p>Web mapping takes cartography beyond static maps.  Today, we’ll use a Python package called <a href="http://python-visualization.github.io/folium/">follium</a> which allows us to create dynamic, interactive webmaps that can be embedded in webpages.  Folium will “translate” our python commands into Javascrpt and create <a href="https://leafletjs.com/">leaflet</a> maps.  Leaflet is a javascript package for creating beautifly functional webmaps.   Follium is already installed, so we don’t have any more steps to do here!</p>
:ET