I"‰<h1 class="no_toc" id="getting-started">Getting Started</h1>
<p>This section provides a broad overview of Python along with an applied introduction.</p>

<details open="">
  <summary class="text-delta">
    Table of contents
  </summary>
<ol id="markdown-toc">
  <li><a href="#why-python" id="markdown-toc-why-python">Why Python?</a>    <ol>
      <li><a href="#packages" id="markdown-toc-packages">Packages</a></li>
      <li><a href="#accessing-python" id="markdown-toc-accessing-python">Accessing Python</a></li>
      <li><a href="#other-resources" id="markdown-toc-other-resources">Other resources</a></li>
    </ol>
  </li>
  <li><a href="#download-the-code-and-data" id="markdown-toc-download-the-code-and-data">Download the Code and Data</a>    <ol>
      <li><a href="#2-open-a-terminal" id="markdown-toc-2-open-a-terminal">2) Open a terminal</a></li>
      <li><a href="#3-clone-the-repository" id="markdown-toc-3-clone-the-repository">3) Clone the Repository</a></li>
      <li><a href="#installing-a-package" id="markdown-toc-installing-a-package">Installing a Package</a></li>
    </ol>
  </li>
  <li><a href="#opening-a-jupyter-notebook" id="markdown-toc-opening-a-jupyter-notebook">Opening a Jupyter Notebook</a></li>
  <li><a href="#video-reference" id="markdown-toc-video-reference">Video Reference</a></li>
</ol>

</details>

<h1 id="why-python">Why Python?</h1>

<p>Its a great language! But its not the only language. Just as English, Cantonese, or Punjabi could all be used to explain systemic racism; Python, Javascirpt, or R can all be used to quantify and visualize the scale of the problem.   like python because its very flexible, fairly easy to read / write, well suited for data analysis, has lots of packages for GIS, and it‚Äôs completely free!</p>

<h2 id="packages">Packages</h2>

<p>Python has a number of built in functionality, but many of the most useful tools and functions come require us to <a href="https://docs.python.org/3/reference/simple_stmts.html#import">import</a> packages.</p>

<ul>
  <li>Packages are pre-written blocks of code, sometimes referred to as libraries.</li>
  <li>They are built for addressing specific tasks: e.g. linear algebra, mapping, plotting.</li>
</ul>

<h2 id="accessing-python">Accessing Python</h2>

<p>Today We‚Äôll be using a UBC server with python already installed on it.  If you want to install Python on your own computer, check out <a href="https://www.anaconda.com/products/individual">Anaconda</a>.</p>

<ul>
  <li>Anaconda will install most commonly used python packages and set everything up for you.</li>
  <li>Anaconda won‚Äôt install <em>every</em> package we‚Äôre using today, but installing new packages is fairly straightforward.</li>
</ul>

<h2 id="other-resources">Other resources</h2>

<p>If you‚Äôre having issues with Python, a great place to check out is <a href="https://stackoverflow.com/">Stack Overflow</a>.  It is a popular forum where you can search, post, and answer coding questions.</p>
<ul>
  <li>A related site that is more GIS focused site is <a href="https://gis.stackexchange.com/">Stack Exchange</a></li>
</ul>

<h1 id="download-the-code-and-data">Download the Code and Data</h1>

<p>1){: .label .label-red } Start Python</p>

<p>UBC provides server space where you can run Python using <a href="https://ubc.syzygy.ca/jupyter">Jupyter Lab</a>.  Login with your CWL.  You‚Äôll then be taken to a blank jupyter lab.</p>
<ul>
  <li>This is good option for getting your bearings because nearly everything is already set up. You don‚Äôt have to worry about installing anything on your own system.</li>
  <li>This may sound intimidating/confusing.  But don‚Äôt worry, its easy.  You don‚Äôt need to know command line to do this.  I‚Äôll walk you through step by step.  You can also refer to the video below for help</li>
</ul>

<h2 id="2-open-a-terminal">2) Open a terminal</h2>

<p>We‚Äôre going to open a command terminal and use command line clone the Github workshop‚Äôs repository.</p>

<ul>
  <li>In they Jupyter window, click File&gt;‚ÄùNew‚Äù in the top right and select ‚ÄúTerminal‚Äù from the drop-down menu.</li>
</ul>

<h2 id="3-clone-the-repository">3) Clone the Repository</h2>

<p>Cloning tells Git (a file tracking software) to to download a repository (collection of code, data, etc.) for this workshop.
In the new terminal window that opens, paste this command and hit enter:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	git clone https://github.com/ubc-library-rc/Geocoding-Web-Mapping-with-Python/
</code></pre></div></div>

<p>A folder called Geocoding-Web-Mapping-with-Python should now be visible.  You can explore it using file viewer on the left, or you can use the command line (see video).</p>

<h2 id="installing-a-package">Installing a Package</h2>

<p>In the terminal window type the command below and hit enter to install the geopy package</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip install geopy
</code></pre></div></div>

<h1 id="opening-a-jupyter-notebook">Opening a Jupyter Notebook</h1>

<p>In the file viewer You will notice a folder titled ‚ÄúGeocoding and Webmapping with Python‚Äù, double clicking the folder will open it.  You‚Äôll see a folders and a collection of files.  The one we‚Äôll be working in is called ‚ÄúPython_Notebooks‚Äù.  Double click to enter.</p>
<ul>
  <li>The .ipynb tag on the end denotes a Jupyter ‚ÄúNotebook‚Äù
    <ul>
      <li>A Notebook is a collection of Python code and annotations that can be run interactively.
        <ul>
          <li>Double click on ‚ÄúGetting Started with Python.ipynb‚Äù to open it.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h1 id="video-reference">Video Reference</h1>

<p>This video covers the above steps</p>
:ET